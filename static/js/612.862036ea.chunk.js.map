{"version":3,"file":"static/js/612.862036ea.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/pages/Movies/Movies.styled.js","components/pages/Movies/Movies.jsx","components/service/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonLoad = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: blue;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 100%;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: blue;\n    color: white;\n    border: 2px solid blue;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\n\nexport const Button = ({ text, type, onClick }) => {\n  return (\n    <ButtonLoad type={type} onClick={onClick}>\n      {text}\n    </ButtonLoad>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import { Grid } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Grid\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"grid-loading\"\n      radius=\"12.5\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Searchcomponent = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: blue;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 10px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Photo = styled.img`\n  max-width: 180px;\n  height: 270px;\n`;\nexport const Item = styled.li`\n  max-width: 200px;\n  margin: 10px;\n`;\n\nexport const Name = styled.p`\n  max-width: 180px;\n  margin: 5px 0;\n  font-size: 16px;\n  text-decoration: none;\n  color: black;\n  text-align: center;\n`;\n\nexport const Error = styled.p`\n  display: block;\n  width: 100%;\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  Searchcomponent,\n  SearchForm,\n  SearchFormButtonLabel,\n  SearchFormButton,\n  SearchFormInput,\n  List,\n  Photo,\n  Name,\n  Item,\n  Error,\n} from './Movies.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport { Button } from '../../Button/Button';\nimport Loader from '../../Loader/Loader';\nimport { getMovieByKeyword } from '../../service/moviesAPI';\nimport { nanoid } from 'nanoid';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageTotal, setPageTotal] = useState(1);\n  const [searchWord, setSearchWord] = useState('');\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    } else {\n      const movie = getMovieByKeyword(search, pageNumber);\n      try {\n        movie.then(resp => {\n          setPageTotal(resp.total_results);\n          const newMovie = resp.results.map(({ id, title, poster_path }) => {\n            if (poster_path === null) {\n              return {\n                realId: nanoid(),\n                id,\n                title,\n                poster_path: `https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg`,\n              };\n            } else {\n              return {\n                realId: nanoid(),\n                id,\n                title,\n                poster_path: `https://image.tmdb.org/t/p/original/${poster_path}`,\n              };\n            }\n          });\n          setMovies(prevState => [...prevState, ...newMovie]);\n          setStatus('OK');\n        });\n      } catch (error) {\n        setStatus('ERROR');\n      }\n    }\n  }, [search, pageNumber]);\n\n  const handleIncrement = () => {\n    setPageNumber(PrevNumber => PrevNumber + 1);\n  };\n\n  const lastPageDef = () => {\n    let lastPage = Number(pageTotal % 12);\n    if (lastPage === 0) {\n      return (lastPage = Number(pageTotal / 12));\n    } else {\n      return (lastPage = Number.parseInt(pageTotal / 12) + 1);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchWord.trim() === '') {\n      alert('Enter a search word.');\n      return;\n    }\n    if (searchWord !== search) {\n      setMovies([]);\n      setSearchParams({ search: searchWord });\n      setStatus('LOADING');\n      setSearchWord('');\n    }\n  };\n\n  return (\n    <>\n      <Searchcomponent>\n        <SearchForm className=\"form\" onSubmit={handleSubmit}>\n          <SearchFormInput\n            className=\"input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"searchWord\"\n            value={searchWord}\n            onChange={event => setSearchWord(event.target.value.toLowerCase())}\n          />\n          <SearchFormButton type=\"submit\" className=\"button\">\n            <SearchFormButtonLabel className=\"button-label\">\n              Search\n            </SearchFormButtonLabel>\n            <FaSearch width=\"48\" height=\"48\" />\n          </SearchFormButton>\n        </SearchForm>\n      </Searchcomponent>\n      <List>\n        {movies.map(({ realId, id, title, poster_path }) => (\n          <Item key={realId}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <Photo src={poster_path} alt=\"film poster\" />\n              <Name>{title}</Name>\n            </Link>\n          </Item>\n        ))}\n      </List>\n      {movies.length > 0 && pageNumber < lastPageDef() && (\n        <Button text={'Load more'} type=\"button\" onClick={handleIncrement} />\n      )}\n      {pageNumber === lastPageDef() && movies.length > 0 && (\n        <Error>You've reached the end of search results.</Error>\n      )}\n      {status === 'LOADING' && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '19c88c04b5d6ef941f0dea95d7f513c3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async pageNumber => {\n  const response = await axios(`trending/movie/day`, {\n    params: {\n      page: pageNumber,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios(`movie/${movieId}`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n  const response = await axios(`search/movie`, {\n    params: {\n      query: keyword,\n      page: pageNumber,\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCreditsById = async movieId => {\n  const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviewById = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["ButtonLoad","styled","Button","text","type","onClick","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","Searchcomponent","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","List","Photo","Item","Name","Error","location","useLocation","useState","movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","search","get","pageNumber","setPageNumber","pageTotal","setPageTotal","searchWord","setSearchWord","useEffect","movie","getMovieByKeyword","then","resp","total_results","newMovie","results","map","id","title","poster_path","realId","nanoid","prevState","error","lastPageDef","lastPage","Number","parseInt","className","onSubmit","event","preventDefault","trim","alert","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","to","state","from","src","alt","length","PrevNumber","Loader","KEY","axios","getTrends","params","page","api_key","response","data","getMovieById","movieId","query","keyword","getCreditsById","cast","getReviewById"],"sourceRoot":""}