{"version":3,"file":"static/js/52.790b16d9.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","components/pages/Home/Home.styled.js","components/pages/Home/Home.jsx","components/service/moviesAPI.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonLoad = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: blue;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 100%;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: blue;\n    color: white;\n    border: 2px solid blue;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\n\nexport const Button = ({ text, type, onClick }) => {\n  return (\n    <ButtonLoad type={type} onClick={onClick}>\n      {text}\n    </ButtonLoad>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import { Grid } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Grid\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"grid-loading\"\n      radius=\"12.5\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  max-width: 180px;\n  height: 270px;\n`;\nexport const Item = styled.li`\n  max-width: 200px;\n  margin: 10px;\n`;\n\nexport const Name = styled.p`\n  max-width: 180px;\n  margin: 5px 0;\n  font-size: 16px;\n  text-decoration: none;\n  color: black;\n  text-align: center;\n`;\n","import { Link } from 'react-router-dom';\nimport { Photo, Item, Name } from './TrendingList.styled';\nimport PropTypes from 'prop-types';\n\nconst TrendingList = ({ id, title, poster_path, state }) => {\n  return (\n    <Item>\n      <Link to={`movies/${id}`} state={state}>\n        <Photo src={poster_path} alt=\"film poster\" />\n        <Name>{title}</Name>\n      </Link>\n    </Item>\n  );\n};\n\nTrendingList.propTypes = {\n  state: PropTypes.object,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n};\n\nexport default TrendingList;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 10px;\n  padding: 0;\n  list-style: none;\n`;\nexport const Container = styled.main`\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrends } from '../../service/moviesAPI';\nimport TrendingList from '../../TrendingList/TrendingList';\nimport { Button } from '../../Button/Button';\nimport Loader from '../../Loader/Loader';\nimport { nanoid } from 'nanoid';\nimport { List, Container } from './Home.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('LOADING');\n    try {\n      getTrends(pageNumber).then(resp => {\n        const moviesTrending = resp.map(({ id, title, poster_path }) => {\n          return {\n            realId: nanoid(),\n            id,\n            title,\n            poster_path: `https://image.tmdb.org/t/p/original/${poster_path}`,\n          };\n        });\n        setMovies(prevState => [...prevState, ...moviesTrending]);\n        setStatus('OK');\n      });\n    } catch (error) {\n      setStatus('ERROR');\n    }\n  }, [pageNumber]);\n\n  const handleIncrement = () => {\n    setPageNumber(PrevNumber => PrevNumber + 1);\n  };\n\n  return (\n    <Container>\n      <h1>Trending today:</h1>\n      {movies.length > 0 && (\n        <List>\n          {movies.map(({ realId, id, title, poster_path }) => (\n            <TrendingList\n              key={realId}\n              id={id}\n              title={title}\n              poster_path={poster_path}\n              state={{ from: location }}\n            />\n          ))}\n        </List>\n      )}\n      {movies.length > 0 && (\n        <Button text={'Load more'} type=\"button\" onClick={handleIncrement} />\n      )}\n      {status === 'LOADING' && <Loader />}\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '19c88c04b5d6ef941f0dea95d7f513c3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async pageNumber => {\n  const response = await axios(`trending/movie/day`, {\n    params: {\n      page: pageNumber,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios(`movie/${movieId}`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n  const response = await axios(`search/movie`, {\n    params: {\n      query: keyword,\n      page: pageNumber,\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCreditsById = async movieId => {\n  const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviewById = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ButtonLoad","styled","Button","text","type","onClick","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","Photo","Item","Name","id","title","poster_path","state","to","src","alt","List","Container","useState","movies","setMovies","status","setStatus","pageNumber","setPageNumber","location","useLocation","useEffect","getTrends","then","resp","moviesTrending","map","realId","nanoid","prevState","error","length","from","PrevNumber","Loader","KEY","axios","params","page","api_key","response","data","results","getMovieById","movieId","query","getMovieByKeyword","keyword","getCreditsById","cast","getReviewById","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}