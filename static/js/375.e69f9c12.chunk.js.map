{"version":3,"file":"static/js/375.e69f9c12.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/service/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Poster = styled.img`\n  width: 50%;\n`;\nexport const Text = styled.span`\n  font-weight: 700;\n`;\nexport const Backward = styled(Link)`\n  padding: 16px 0px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: blue;\n`;\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding: 16px 0px;\n`;\nexport const Item = styled.li`\n  text-decoration: none;\n  color: blue;\n`;\n","import { useParams, Link, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport { getMovieById } from '../service/moviesAPI';\nimport {\n  Poster,\n  Text,\n  Backward,\n  Container,\n  List,\n  Item,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [overview, setOverview] = useState('');\n  const [poster, setPoster] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [score, setScore] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    try {\n      getMovieById(movieId).then(response => {\n        setTitle(response.title);\n        setDate(response.release_date);\n        setOverview(response.overview);\n        if (response.poster_path === null) {\n          setPoster(\n            `https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg`\n          );\n        } else {\n          setPoster(\n            `https://image.tmdb.org/t/p/original/${response.poster_path}`\n          );\n        }\n        setGenres(response.genres);\n        setScore(response.vote_average);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <Container>\n      <Backward to={from}>Back to movies</Backward>\n      <h2>{title}</h2>\n      <p>\n        <Text>Date:</Text> {date}\n      </p>\n      <p>\n        <Text>User Score:</Text> {score}\n      </p>\n      <p>\n        <Text>Overview:</Text> {overview}\n      </p>\n      <Poster src={poster} alt=\"poster\" />\n      <p>\n        <Text>Genres:</Text>{' '}\n        {genres\n          .map(genre => {\n            return genre.name;\n          })\n          .join(', ')}\n      </p>\n\n      <List>\n        <Item>\n          <Link to=\"cast\" state={{ from }}>\n            Read about a cast\n          </Link>\n        </Item>\n        <Item>\n          <Link to=\"reviews\" state={{ from }}>\n            Get to know the reviews\n          </Link>\n        </Item>\n      </List>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '19c88c04b5d6ef941f0dea95d7f513c3';\n\naxios.defaults.baseURL = URL;\n\nexport const getTrends = async pageNumber => {\n  const response = await axios(`trending/movie/day`, {\n    params: {\n      page: pageNumber,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios(`movie/${movieId}`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieByKeyword = async (keyword, pageNumber) => {\n  const response = await axios(`search/movie`, {\n    params: {\n      query: keyword,\n      page: pageNumber,\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCreditsById = async movieId => {\n  const response = await axios(`movie/${movieId}/credits`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviewById = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      query: movieId,\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["Poster","styled","Text","Backward","Link","Container","List","Item","useState","title","setTitle","date","setDate","overview","setOverview","poster","setPoster","genres","setGenres","score","setScore","movieId","useParams","from","useLocation","state","useEffect","getMovieById","then","response","release_date","poster_path","vote_average","error","console","log","to","src","alt","map","genre","name","join","Suspense","fallback","KEY","axios","getTrends","pageNumber","params","page","api_key","data","results","query","getMovieByKeyword","keyword","getCreditsById","cast","getReviewById"],"sourceRoot":""}